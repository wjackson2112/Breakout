{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mouse",
				"mouseButton"
			],
			[
				"handleMouse",
				"handleMousePress"
			],
			[
				"handleLeft",
				"handleLeftMouseClick"
			],
			[
				"COL_",
				"COL_PADDING"
			],
			[
				"NUM",
				"NUM_COLS"
			],
			[
				"QUIT",
				"QUIT_PROGRAM"
			],
			[
				"AUDIO_OPTOIN",
				"AUDIO_OPTIONS_MENU"
			],
			[
				"VIDEO",
				"VIDEO_OPTIONS_MENU"
			],
			[
				"OP",
				"OPTIONS_ST"
			],
			[
				"MenuMana",
				"MenuManagerState"
			],
			[
				"show",
				"shownMenuStateChanged"
			],
			[
				"screen",
				"screenWidth"
			],
			[
				"scree",
				"screenWidth"
			],
			[
				"pauseMen",
				"pauseMenuNumRows"
			],
			[
				"mainMen",
				"mainMenuColPadding"
			],
			[
				"main",
				"mainMenuColWidth"
			],
			[
				"mainMenuRow",
				"mainMenuRowPadding"
			],
			[
				"upda",
				"updateState"
			],
			[
				"enab",
				"enabled"
			],
			[
				"extra",
				"extra_tag_files"
			],
			[
				"SDL_GetPer",
				"SDL_GetPerformanceFrequency	(Ball.cpp)"
			],
			[
				"State",
				"StateMachineCB"
			],
			[
				"alp",
				"alphaTransitionComplete	(Block.h)"
			],
			[
				"alph",
				"alphaCB"
			],
			[
				"SDL_Get",
				"SDL_GetPerformanceFrequency	(Ball.cpp)"
			],
			[
				"SDL_SetT",
				"SDL_SetTextureColorMod"
			],
			[
				"paddle",
				"paddle_sound	(Ball.h)"
			],
			[
				"Sound",
				"SoundBuffer"
			],
			[
				"FLYING",
				"FLYING_ST"
			],
			[
				"LOST",
				"LOST_ST"
			],
			[
				"WAIT",
				"WAITING_ST"
			],
			[
				"StateM",
				"StateMachineCB	(StateMachine.h)"
			],
			[
				"SDL",
				"SDL_Surface"
			],
			[
				"CSimple",
				"CSimpleIniA"
			],
			[
				"scre",
				"screenHeight	(Globals.h)"
			],
			[
				"blo",
				"blockHeight	(Globals.h)"
			],
			[
				"Globa",
				"Globals::fieldWidth"
			],
			[
				"block",
				"blockWidth	(Globals.h)"
			],
			[
				"getFiel",
				"getFieldHeight	(GameManager.cpp)"
			],
			[
				"getField",
				"getFieldHeight	(Globals.h)"
			],
			[
				"get",
				"getBlockWidth"
			],
			[
				"getBlock",
				"getBlockHeight"
			],
			[
				"getScre",
				"getScreenHeight	(main.cpp)"
			],
			[
				"fiel",
				"FIELD_RATIO"
			],
			[
				"bloc",
				"block_height"
			],
			[
				"field",
				"field_width"
			],
			[
				"FIELD",
				"FIELD_RATIO"
			],
			[
				"scren",
				"screen_width"
			],
			[
				"SCREEN",
				"SCREEN_WIDTH"
			],
			[
				"SCE",
				"SCREEN_HEIGHT	(GameManager.cpp)"
			],
			[
				"SCRE",
				"SCREEN_WIDTH"
			],
			[
				"GAME",
				"GAME_RUNNING"
			],
			[
				"GA",
				"GAME_PAUSED"
			],
			[
				"menu",
				"menuQuit"
			],
			[
				"GamEve",
				"GameEventStr	(EventManager.h)"
			],
			[
				"GameEve",
				"GameEventStr	(EventManager.h)"
			],
			[
				"BAL",
				"BALLS_DEPLETED"
			],
			[
				"print",
				"printHandlers	(EventManager.h)"
			],
			[
				"bal",
				"ballsRemaining"
			],
			[
				"Event",
				"EventManager	(ProgramManager.h)"
			],
			[
				"clear",
				"clearGameEvents"
			],
			[
				"SDL_SC",
				"SDL_SCANCODE_P"
			],
			[
				"SCREE",
				"SCREEN_HEIGHT"
			],
			[
				"SRC",
				"SRC_DIR"
			],
			[
				"colli",
				"collisionClone	(Entity.h)"
			],
			[
				"col",
				"collisionClone	(Entity.h)"
			],
			[
				"event",
				"eventHandlers"
			],
			[
				"update",
				"updateVelocityWithAngle"
			],
			[
				"handle",
				"handleEvents	(GameManager.h)"
			],
			[
				"ENTY",
				"ENTITY_HEIGHT	(Entity.h)"
			],
			[
				"ENTITY_",
				"ENTITY_WIDTH	(Entity.h)"
			],
			[
				"instance",
				"instanceFlag	(EventHandler.h)"
			],
			[
				"key",
				"keyDownCallbacks"
			],
			[
				"registerKe",
				"registerKeyDown	(EventHandler.h)"
			],
			[
				"ca",
				"callbacks"
			],
			[
				"handl",
				"handleEvents	(EventHandler.h)"
			],
			[
				"quit",
				"quitReceived"
			],
			[
				"SDL_Rend",
				"SDL_RenderPresent	(09_the_viewport_SDL.cpp)"
			],
			[
				"Render",
				"Renderer	(09_the_viewport_SDL.cpp)"
			],
			[
				"SDL_Create",
				"SDL_CreateRenderer	(09_the_viewport_SDL.cpp)"
			],
			[
				"SDL_WINDOW",
				"SDL_WINDOWPOS_UNDEFINED"
			],
			[
				"SCREEN_",
				"SCREEN_WIDTH"
			],
			[
				"SDL_Des",
				"SDL_DestroyRenderer	(07_texture_loading_and_rendering_SDL.cpp)"
			],
			[
				"IMG",
				"IMG_Load"
			],
			[
				"top",
				"topRightViewport"
			],
			[
				"to",
				"topLeftViewport"
			],
			[
				"SCR",
				"SCREEN_WIDTH"
			],
			[
				"stretc",
				"stretchRect"
			],
			[
				"loaded",
				"loadedSurface"
			],
			[
				"optim",
				"optimizedSurface"
			],
			[
				"Key",
				"KEY_PRESS_SURFACE_DEFAULT"
			],
			[
				"KEY",
				"KEY_PRESS_SURFACE_RIGHT"
			],
			[
				"load",
				"loadSurface"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Ball.cpp",
			"settings":
			{
				"buffer_size": 6915,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Ball.h",
			"settings":
			{
				"buffer_size": 968,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/BallsIndicator.cpp",
			"settings":
			{
				"buffer_size": 1283,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/BallsIndicator.h",
			"settings":
			{
				"buffer_size": 606,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Button.cpp",
			"settings":
			{
				"buffer_size": 1177,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Button.h",
			"settings":
			{
				"buffer_size": 739,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Entity.cpp",
			"settings":
			{
				"buffer_size": 1167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Entity.h",
			"settings":
			{
				"buffer_size": 778,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GameManager.cpp",
			"settings":
			{
				"buffer_size": 5247,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Label.cpp",
			"settings":
			{
				"buffer_size": 874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Menu.cpp",
			"settings":
			{
				"buffer_size": 2284,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MenuEntity.cpp",
			"settings":
			{
				"buffer_size": 148,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/MenuEntity.h",
			"settings":
			{
				"buffer_size": 288,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Paddle.cpp",
			"settings":
			{
				"buffer_size": 2451,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Paddle.h",
			"settings":
			{
				"buffer_size": 924,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/PhysicsEntity.h",
			"settings":
			{
				"buffer_size": 419,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Make.sublime-build",
					""
				],
				[
					"Packages/User/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Make.sublime-build",
					"All"
				],
				[
					"Packages/User/Make.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "run",
		"selected_items":
		[
			[
				"run",
				"Build With: Make - Run"
			],
			[
				"debug",
				"Build With: Make - Debug"
			],
			[
				"all",
				"Build With: Make - All"
			],
			[
				"",
				"Build With: Make - Run"
			],
			[
				"make",
				"Build With: Make - Run"
			],
			[
				"sort",
				"Sort Tabs: Menu"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"Debug",
				"Build With: Make - Debug"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"\\",
				"Origami: Zoom/Unzoom Current Pane (Toggle Zoom)"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"make all",
				"Build With: Make - All"
			],
			[
				"make clean",
				"Build With: Make - Clean"
			],
			[
				"make distclean",
				"Build With: Make - Distclean"
			],
			[
				"clean",
				"Build With: Make - Clean"
			],
			[
				"git quick",
				"Git: Quick Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"Cscope: ",
				"Cscope: Look up symbol"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"tags",
				"CTags: Rebuild Tags"
			],
			[
				"make run",
				"Build With: Make - Run"
			],
			[
				"git diff",
				"Git: Diff All Files"
			],
			[
				"git difftool",
				"Git: Diff Tool All"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"ctags",
				"CTags: Rebuild Tags"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 419.0,
		"history":
		[
			"view.run_command(\"ansi\")",
			"sublime.run_command(\"color_scheme_emergency_reset\")",
			"class ColorSchemeEmergencyResetCommand(sublime_plugin.ApplicationCommand):",
			"import sublime_plugin",
			"import sublime",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/will/Documents/git/Breakout",
		"/home/will/Documents/git/Breakout/include",
		"/home/will/Documents/git/Breakout/src"
	],
	"file_history":
	[
		"/home/will/Documents/git/Breakout/src/Ball.cpp",
		"/home/will/Documents/git/Breakout/include/Ball.h",
		"/home/will/Documents/git/Breakout/src/BallsIndicator.cpp",
		"/home/will/Documents/git/Breakout/include/BallsIndicator.h",
		"/home/will/Documents/git/Breakout/src/Block.cpp",
		"/home/will/Documents/git/Breakout/breakout.sublime-project",
		"/home/will/Documents/git/Breakout/include/Button.h",
		"/home/will/Documents/git/Breakout/src/Collider.cpp",
		"/home/will/Documents/git/Breakout/include/Collider.h",
		"/home/will/Documents/git/Breakout/src/Entity.cpp",
		"/home/will/Documents/git/Breakout/include/Entity.h",
		"/home/will/Documents/git/Breakout/src/GameManager.cpp",
		"/home/will/Documents/git/Breakout/src/Label.cpp",
		"/home/will/Documents/git/Breakout/include/Label.h",
		"/home/will/Documents/git/Breakout/src/Menu.cpp",
		"/home/will/Documents/git/Breakout/src/MenuEntity.cpp",
		"/home/will/Documents/git/Breakout/include/MenuEntity.h",
		"/home/will/Documents/git/Breakout/src/Paddle.cpp",
		"/home/will/Documents/git/Breakout/src/PhysicsEntity.cpp",
		"/home/will/Documents/git/Breakout/include/PhysicsEntity.h",
		"/home/will/Documents/git/Breakout/src/UIEntity.cpp",
		"/home/will/Documents/git/Breakout/include/UIEntity.h",
		"/home/will/Documents/git/Breakout/src/Button.cpp",
		"/home/will/Documents/git/Breakout/include/Block.h",
		"/home/will/Documents/git/Breakout/include/Paddle.h",
		"/home/will/Documents/git/Breakout/breakout",
		"/home/will/Documents/git/Breakout/src/EventManager.cpp",
		"/home/will/Documents/git/Breakout/include/EventManager.h",
		"/home/will/Documents/git/Breakout/include/IEventHandler.h",
		"/home/will/Documents/git/Breakout/include/IMouseEventHandler.h",
		"/home/will/Documents/git/Breakout/include/Menu.h",
		"/home/will/Documents/git/Breakout/src/MenuManager.cpp",
		"/home/will/Documents/git/Breakout/include/MenuManager.h",
		"/home/will/Documents/git/Breakout/src/ProgramManager.cpp",
		"/home/will/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/will/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/will/Documents/git/Breakout/src/AudioOptionsMenu.cpp",
		"/home/will/.config/sublime-text-3/Packages/SortTabs/SortTabs.sublime-settings",
		"/home/will/.config/sublime-text-3/Packages/User/SortTabs.sublime-settings",
		"/home/will/Documents/git/Breakout/include/Globals.h",
		"/home/will/Documents/git/Breakout/src/Globals.cpp",
		"/home/will/Documents/git/Breakout/src/main.cpp",
		"/home/will/Documents/git/Breakout/include/GameManager.h",
		"/home/will/Documents/git/Breakout/include/SimpleIni.h",
		"/home/will/Documents/git/Breakout/breakout.ini",
		"/home/will/Documents/git/Breakout/include/MainMenu.h",
		"/home/will/Documents/git/Breakout/src/PauseMenu.cpp",
		"/home/will/Documents/git/Breakout/include/PauseMenu.h",
		"/home/will/Documents/git/Breakout/src/OptionsMenu.cpp",
		"/home/will/Documents/git/Breakout/include/VideoOptionsMenu.h",
		"/home/will/Documents/git/Breakout/include/AudioOptionsMenu.h",
		"/home/will/Documents/git/Breakout/src/VideoOptionsMenu.cpp",
		"/home/will/Documents/git/Breakout/include/OptionsMenu.h",
		"/home/will/Documents/git/Breakout/src/MainMenu.cpp",
		"/home/will/Documents/git/Breakout/include/AssetFactory.h",
		"/home/will/Documents/git/Breakout/.tags",
		"/home/will/.config/sublime-text-3/Packages/CTags/CTags.sublime-settings",
		"/home/will/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
		"/home/will/Documents/git/Breakout/include/PauseMenuManager.h",
		"/home/will/Documents/git/Breakout/src/PauseMenuManager.cpp",
		"/home/will/.config/sublime-text-3/Packages/CTags/Default.sublime-keymap",
		"/usr/include/SDL2/.tags",
		"/usr/include/SDL2/SDL_surface.h",
		"/home/will/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/will/Documents/git/Breakout/src/AssetFactory.cpp",
		"/home/will/Documents/git/Breakout/include/StateMachine.h",
		"/home/will/Documents/git/Breakout/include/Effects.h",
		"/home/will/Documents/git/Breakout/src/Effects.cpp",
		"/home/will/Documents/git/Breakout/Makefile",
		"/home/will/Documents/git/Breakout/src/Sound.cpp",
		"/home/will/Documents/git/Breakout/include/ProgramManager.h",
		"/home/will/Documents/git/Breakout/include/Sound.h",
		"/home/will/Documents/git/Breakout/src/StateMachine.cpp",
		"/home/will/Documents/git/Breakout/include/TextureFactory.h",
		"/home/will/Documents/git/Breakout/include/Types.h",
		"/home/will/Documents/git/Breakout/src/TextureFactory.cpp",
		"/home/will/Documents/SDL Tutorial/07_texture_loading_and_rendering_SDL.cpp",
		"/usr/include/c++/4.9/bits/stl_iterator.h",
		"/build/buildd/glibc-2.21/sysdeps/unix/syscall-template.S",
		"/home/will/Documents/git/Breakout/include/IBallDelegate.h",
		"/home/will/Documents/git/Breakout/include/IBallsIndicatorDelegate.h",
		"/home/will/.config/sublime-text-3/Packages/User/Default (Linux).sublime-mousemap",
		"/usr/local/bin/colormake",
		"/usr/local/bin/testcolormake.sh",
		"/home/will/Documents/git/Breakout/build/Ball.d",
		"/home/will/Documents/git/Breakout/src/GameManager.h",
		"/home/will/Documents/git/Breakout/src/Ball.h",
		"/home/will/Documents/git/Breakout/src/Paddle.h",
		"/home/will/Documents/git/Breakout/src/Block.h",
		"/home/will/Documents/git/Breakout/src/IEventHandler.h",
		"/home/will/Documents/git/Breakout/src/UIEntity.h",
		"/home/will/Documents/git/Breakout/src/PhysicsEntity.h",
		"/home/will/Documents/git/Breakout/src/Entity.h",
		"/home/will/Documents/git/Breakout/src/IBlockDelegate.h",
		"/home/will/Documents/git/Breakout/src/UIEntity.c",
		"/home/will/Documents/git/Breakout/src/PhysicsEntity.c",
		"/home/will/Documents/git/Breakout/src/Globals.h",
		"/home/will/Documents/git/Breakout/.gitignore",
		"/home/will/Documents/breakout/src/Paddle.cpp",
		"/home/will/Documents/breakout/src/Paddle.h",
		"/home/will/Documents/breakout/src/Entity.cpp",
		"/home/will/Documents/breakout/src/Ball.cpp",
		"/home/will/Documents/breakout/src/Entity.h",
		"/home/will/Documents/SDL Tutorial/09_the_viewport_SDL.cpp",
		"/home/will/Documents/breakout/src/IEventHandler.h",
		"/home/will/Documents/breakout/src/Block.cpp",
		"/home/will/Documents/breakout/src/Block.h",
		"/home/will/Documents/breakout/src/Ball.h",
		"/home/will/Documents/breakout/src/EventManager.cpp",
		"/home/will/Documents/breakout/src/EventManager.h",
		"/home/will/Documents/breakout/src/GameManager.cpp",
		"/home/will/Documents/breakout/src/GameManager.h",
		"/home/will/Documents/breakout/src/Globals.h",
		"/home/will/Documents/breakout/src/main.cpp",
		"/home/will/Documents/breakout/Makefile",
		"/home/will/Documents/breakout/breakout",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/LTexture.h",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/LTexture.cpp",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/11_clip_rendering_and_sprite_sheets_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/10_color_keying/Makefile",
		"/home/will/Documents/SDL Tutorial/Makefile",
		"/home/will/Documents/SDL Tutorial/10_color_keying/LTexture.cpp",
		"/home/will/Documents/SDL Tutorial/10_color_keying/LTexture.h",
		"/home/will/Documents/SDL Tutorial/10_color_keying/10_color_keying_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/08_geometry_rendering_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/06_extension_libraries_and_loading_other_image_formats_SDL.cpp",
		"/usr/include/SDL2/SDL_render.h",
		"/home/will/.config/sublime-text-3/Packages/User/PlainTasks.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 100.0,
		"where_history":
		[
			"/home/will/Documents/git/Breakout",
			"/home/will/Documents/git/Breakout/src,/home/will/Documents/git/Breakout/include",
			"\n<open folders>",
			"<current file>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"cout",
			"velX",
			"updateVelocityWithAngle",
			"std::cout",
			"NULL",
			"add_menu_item",
			"height",
			"width",
			"posY",
			"posX",
			"getSize().y",
			"getSize().x",
			"getOrigin",
			"height",
			"width",
			"posY",
			"posX",
			"height",
			"width",
			"posY",
			"posX",
			"handleMousePress",
			"activeMenu",
			"void handleMouseDrag(int mouseButton, int xPrev, int yPrev, int xCurr, int yCurr)",
			"void handleMouseDrag(int mouseButton, int xPrev, int yPrev, int xCurr, yCurr)",
			"void handleMouseDrag(int mouseButton, int x, int y)",
			"handleMouseDrag",
			"save",
			"handleMouseClick",
			"GameEvent",
			"NO_EVENT",
			"Button",
			"BACK",
			"auto",
			"setRect",
			"NULL",
			"activeMenu",
			"disable",
			"enable",
			"height",
			"width",
			"posY",
			"posX",
			"this->r",
			"UIEntity",
			"uiEntities",
			"cout",
			"SetRenderDrawColor",
			"0",
			"COMPLETE",
			"){",
			"AssetFactory",
			"string",
			"getTexture",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"getTexture",
			"textureFactory",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"textureFactory",
			"TextureFactory",
			"getTexture",
			"TextureFactory",
			"textureFactory",
			"Texture",
			"img",
			"machineState",
			"ST",
			"state",
			"texture2",
			"assets",
			"T",
			"SDLSurface",
			"getTexture",
			", ",
			"FIELD_HEIGHT",
			"Y_OFFSET",
			"X_OFFSET",
			"FIELD_WIDTH",
			"Y_OFFSET",
			"X_OFFSET",
			"SCREEN_HEIGHT",
			"SCREEN_WIDTH",
			"Y_OFFSET",
			"X_OFFSET",
			"BLOCK_HEIGHT",
			"FIELD_WIDTH",
			"Globals.h",
			"SCREEN_HEIGHT",
			"SCREEN_WIDTH",
			"QUIT_GAME",
			"cout",
			"printf",
			"Resetting",
			"NEW_GAME",
			"\n\n	std::cout << \"Reset\" << std::endl;",
			"events[NEW_GAME]",
			"if(events[QUIT_GAME]",
			"handleGameEvents",
			"handleMouseEvents",
			"PollEvent",
			"handleKeyboardEvents",
			"isDeletable",
			");\n",
			"std::cout",
			"\\",
			"std::cout",
			"machineState",
			"delegate",
			"\\",
			"Delegate",
			"gameWon()",
			"collidedObject",
			"resolveCollision",
			"clone",
			"Clone",
			"delegate->",
			"handleGameEvents(Uint8* events);",
			"handleGameEvents(int event);"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"this->rect.h",
			"this->rect.w",
			"this->rect.y",
			"this->rect.x",
			"getRect().h",
			"getRect().w",
			"getRect",
			"this->rect.h",
			"this->rect.w",
			"this->rect.y",
			"this->rect.x",
			"this->rect.h",
			"this->rect.w",
			"this->rect.y",
			"this->rect.x",
			"void handleMouseDrag(int mouseButton, int prevX, int prevY, int currX, int currY)",
			"void handleMouseDrag(int mouseButton, int xPrev, int yPrev, int xCurr, int yCurr)",
			"void handleMouseDrag(int mouseButton, int xPrev, int yPrev, int xCurr, yCurr)",
			"handleMousePress",
			"Label",
			"this->rect.h",
			"this->rect.w",
			"this->rect.y",
			"this->rect.x",
			"MenuEntity",
			"menuEntities",
			"getAsset",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"getAsset",
			"assetFactory",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"assetFactory",
			"AssetFactory",
			"getAsset",
			"AssetFactory",
			"assetFactory",
			"Asset",
			"textures",
			"Globals::fieldHeight",
			"Globals::yOffset",
			"Globals::xOffset",
			"Globals::fieldWidth",
			"Globals::yOffset",
			"Globals::xOffset",
			"Globals::screenHeight",
			"Globals::screenWidth",
			"Globals::yOffset",
			"Globals::xOffset",
			"Globals::blockHeight",
			"Globals::fieldWidth",
			"collider",
			"handleGameEvents(const Uint8* events);",
			"handleGameEvents(Uint8* events);",
			"handleKeyboardEvents",
			"Paddle",
			"EventManager"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Ball.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6915,
						"regions":
						{
						},
						"selection":
						[
							[
								3241,
								3241
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468589978.34,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1596.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/Ball.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 968,
						"regions":
						{
						},
						"selection":
						[
							[
								819,
								819
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468586647.6,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/BallsIndicator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1283,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562741.93,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/BallsIndicator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 606,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562128.14,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Button.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1177,
						"regions":
						{
						},
						"selection":
						[
							[
								73,
								73
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468561481.02,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/Button.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 739,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468560998.36,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/Entity.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1167,
						"regions":
						{
						},
						"selection":
						[
							[
								653,
								653
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468589443.58,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 179.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/Entity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 778,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562997.16,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/GameManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5247,
						"regions":
						{
						},
						"selection":
						[
							[
								2581,
								2581
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468590953.13,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1539.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Label.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468590962.32,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/Menu.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2284,
						"regions":
						{
						},
						"selection":
						[
							[
								819,
								819
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562991.94,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/MenuEntity.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 148,
						"regions":
						{
						},
						"selection":
						[
							[
								146,
								146
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562955.41,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "include/MenuEntity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 288,
						"regions":
						{
						},
						"selection":
						[
							[
								215,
								215
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468565676.88,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/Paddle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2451,
						"regions":
						{
						},
						"selection":
						[
							[
								465,
								465
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562529.65,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1368.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "include/Paddle.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 924,
						"regions":
						{
						},
						"selection":
						[
							[
								865,
								865
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468562562.28,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "include/PhysicsEntity.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 419,
						"regions":
						{
						},
						"selection":
						[
							[
								377,
								377
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1468565682.1,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 445.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 466.0
	},
	"pinned_build_system": "Packages/User/Make.sublime-build",
	"project": "breakout.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"label.c",
				"Breakout/src/Label.cpp"
			],
			[
				"gamemanager.cpp",
				"Breakout/src/GameManager.cpp"
			],
			[
				"",
				"Breakout/src/Ball.cpp"
			],
			[
				"paddle.h",
				"Breakout/include/Paddle.h"
			],
			[
				"physics",
				"Breakout/include/PhysicsEntity.h"
			],
			[
				"ballsindicator.cpp",
				"Breakout/src/BallsIndicator.cpp"
			],
			[
				"entity.h",
				"Breakout/include/Entity.h"
			],
			[
				"menuentity",
				"Breakout/src/MenuEntity.cpp"
			],
			[
				"button.h",
				"Breakout/include/Button.h"
			],
			[
				"entity.cpp",
				"Breakout/src/Entity.cpp"
			],
			[
				"menu.cpp",
				"Breakout/src/Menu.cpp"
			],
			[
				"block.cpp",
				"Breakout/src/Block.cpp"
			],
			[
				"collider",
				"Breakout/src/Collider.cpp"
			],
			[
				"balls",
				"Breakout/src/BallsIndicator.cpp"
			],
			[
				"uien",
				"Breakout/src/UIEntity.cpp"
			],
			[
				"uientity",
				"Breakout/include/UIEntity.h"
			],
			[
				"label.cpp",
				"Breakout/src/Label.cpp"
			],
			[
				"ball.cpp",
				"Breakout/src/Ball.cpp"
			],
			[
				"button.cpp",
				"Breakout/src/Button.cpp"
			],
			[
				"ballsind",
				"Breakout/src/BallsIndicator.cpp"
			],
			[
				"entity",
				"Breakout/include/Entity.h"
			],
			[
				"block.h",
				"Breakout/include/Block.h"
			],
			[
				"ball.h",
				"Breakout/include/Ball.h"
			],
			[
				"gamemanager",
				"Breakout/src/GameManager.cpp"
			],
			[
				"ballsin",
				"Breakout/src/BallsIndicator.cpp"
			],
			[
				"lable.cpp",
				"Breakout/src/Label.cpp"
			],
			[
				"paddle.cpp",
				"Breakout/src/Paddle.cpp"
			],
			[
				"menumanager.cpp",
				"Breakout/src/MenuManager.cpp"
			],
			[
				"program",
				"Breakout/src/ProgramManager.cpp"
			],
			[
				"label.h",
				"Breakout/include/Label.h"
			],
			[
				"menumanager.h",
				"Breakout/include/MenuManager.h"
			],
			[
				"menumanager",
				"Breakout/include/MenuManager.h"
			],
			[
				"mouseeve",
				"Breakout/include/IMouseEventHandler.h"
			],
			[
				"menuman",
				"Breakout/src/MenuManager.cpp"
			],
			[
				"menu.h",
				"Breakout/include/Menu.h"
			],
			[
				"mainm",
				"Breakout/include/MainMenu.h"
			],
			[
				"pause",
				"Breakout/include/PauseMenu.h"
			],
			[
				"op",
				"Breakout/include/OptionsMenu.h"
			],
			[
				"options",
				"Breakout/src/OptionsMenu.cpp"
			],
			[
				"menueni",
				"Breakout/include/MenuEntity.h"
			],
			[
				"pro",
				"Breakout/src/ProgramManager.cpp"
			],
			[
				"asset",
				"Breakout/include/AssetFactory.h"
			],
			[
				"stateme",
				"include/StateMachine.h"
			],
			[
				"sond.h",
				"include/Sound.h"
			],
			[
				"sound.h",
				"include/Sound.h"
			],
			[
				"makefil",
				"Makefile"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"make",
				"Makefile"
			],
			[
				"progr",
				"include/ProgramManager.h"
			],
			[
				"game",
				"include/GameManager.h"
			],
			[
				"padd",
				"src/Paddle.cpp"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"ball",
				"src/Ball.cpp"
			],
			[
				"block.cp",
				"src/Block.cpp"
			],
			[
				"ini",
				"breakout.ini"
			],
			[
				"global",
				"include/Globals.h"
			],
			[
				"button.c",
				"src/Button.cpp"
			],
			[
				"menu",
				"src/MenuManager.cpp"
			],
			[
				"block.",
				"src/Block.cpp"
			],
			[
				"paddl",
				"src/Paddle.cpp"
			],
			[
				"event",
				"include/EventManager.h"
			],
			[
				"button.cp",
				"src/Button.cpp"
			],
			[
				"button",
				"include/Button.h"
			],
			[
				"eve",
				"src/EventManager.cpp"
			],
			[
				"p",
				"src/Paddle.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 480.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
