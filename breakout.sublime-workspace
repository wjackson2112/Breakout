{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"SCREE",
				"SCREEN_HEIGHT"
			],
			[
				"SRC",
				"SRC_DIR"
			],
			[
				"colli",
				"collisionClone	(Entity.h)"
			],
			[
				"col",
				"collisionClone	(Entity.h)"
			],
			[
				"block",
				"blockDisappearing	(IBlockDelegate.h)"
			],
			[
				"SCREEN",
				"SCREEN_HEIGHT	(Globals.h)"
			],
			[
				"event",
				"eventHandlers"
			],
			[
				"SDL_SC",
				"SDL_SCANCODE_LEFT"
			],
			[
				"SDL_Get",
				"SDL_GetPerformanceFrequency"
			],
			[
				"update",
				"updateVelocityWithAngle"
			],
			[
				"handle",
				"handleEvents	(GameManager.h)"
			],
			[
				"ENTY",
				"ENTITY_HEIGHT	(Entity.h)"
			],
			[
				"ENTITY_",
				"ENTITY_WIDTH	(Entity.h)"
			],
			[
				"instance",
				"instanceFlag	(EventHandler.h)"
			],
			[
				"key",
				"keyDownCallbacks"
			],
			[
				"registerKe",
				"registerKeyDown	(EventHandler.h)"
			],
			[
				"ca",
				"callbacks"
			],
			[
				"handl",
				"handleEvents	(EventHandler.h)"
			],
			[
				"quit",
				"quitReceived"
			],
			[
				"Event",
				"EventHandler"
			],
			[
				"SDL_Rend",
				"SDL_RenderPresent	(09_the_viewport_SDL.cpp)"
			],
			[
				"Render",
				"Renderer	(09_the_viewport_SDL.cpp)"
			],
			[
				"SDL_Create",
				"SDL_CreateRenderer	(09_the_viewport_SDL.cpp)"
			],
			[
				"SDL_WINDOW",
				"SDL_WINDOWPOS_UNDEFINED"
			],
			[
				"SCREEN_",
				"SCREEN_WIDTH"
			],
			[
				"SDL_Des",
				"SDL_DestroyRenderer	(07_texture_loading_and_rendering_SDL.cpp)"
			],
			[
				"IMG",
				"IMG_Load"
			],
			[
				"SCRE",
				"SCREEN_HEIGHT"
			],
			[
				"top",
				"topRightViewport"
			],
			[
				"to",
				"topLeftViewport"
			],
			[
				"SCR",
				"SCREEN_WIDTH"
			],
			[
				"stretc",
				"stretchRect"
			],
			[
				"loaded",
				"loadedSurface"
			],
			[
				"optim",
				"optimizedSurface"
			],
			[
				"Key",
				"KEY_PRESS_SURFACE_DEFAULT"
			],
			[
				"KEY",
				"KEY_PRESS_SURFACE_RIGHT"
			],
			[
				"load",
				"loadSurface"
			]
		]
	},
	"buffers":
	[
		{
			"file": "include/BallsIndicator.h",
			"settings":
			{
				"buffer_size": 697,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/BallsIndicator.cpp",
			"settings":
			{
				"buffer_size": 1406,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/IBallsIndicatorDelegate.h",
			"settings":
			{
				"buffer_size": 158,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EventManager.cpp",
			"settings":
			{
				"buffer_size": 973,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/EventManager.h",
			"settings":
			{
				"buffer_size": 595,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Ball.h",
			"settings":
			{
				"buffer_size": 858,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Ball.cpp",
			"settings":
			{
				"buffer_size": 5845,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 21 files for \"if(event == 1)\"\n\n/home/will/Documents/git/Breakout/src/BallsIndicator.cpp:\n   24  void BallsIndicator::handleGameEvents(int event)\n   25  {\n   26: 	if(event == 1)\n   27  	{\n   28  		this->ballsRemaining--;\n\n1 match in 1 file\n\n\nSearching 22 files for \"GameManager\"\n\n/home/will/Documents/git/Breakout/src/GameManager.cpp:\n    1: #include \"GameManager.h\"\n    2  \n    3: GameManager::GameManager()\n    4  {\n    5  	srand(time(NULL));\n    .\n    8  }\n    9  \n   10: GameManager::~GameManager()\n   11  {\n   12  	for(auto &entity : physicsEntities)\n   ..\n   16  }\n   17  \n   18: void GameManager::gameWon()\n   19  {\n   20  	resetLevel();\n   21  }\n   22  \n   23: void GameManager::gameLost()\n   24  {\n   25  	resetLevel();\n   26  }\n   27  \n   28: void GameManager::resetLevel()\n   29  {\n   30  	if(uiEntities.size() >= 0){\n   ..\n   62  }\n   63  \n   64: bool GameManager::shouldQuit()\n   65  {\n   66  	return quit;\n   67  }\n   68  \n   69: void GameManager::handleKeyboardEvents()\n   70  {\n   71  	SDL_Event e;\n   ..\n   80  }\n   81  \n   82: void GameManager::handleGameEvents()\n   83  {\n   84  \n   85  }\n   86  \n   87: void GameManager::detectCollisions()\n   88  {\n   89  	for(auto &entityA : physicsEntities)\n   ..\n  135  }\n  136  \n  137: void GameManager::render(SDL_Renderer* gRenderer)\n  138  {\n  139  	SDL_SetRenderDrawColor(gRenderer, 0x10, 0x10, 0x10, 0xFF);\n  ...\n  153  }\n  154  \n  155: void GameManager::update(int frameTime)\n  156  {\n  157  	static bool levelComplete = false;\n  ...\n  187  }\n  188  \n  189: void GameManager::blockDisappearing()\n  190  {\n  191  	blockCount--;\n  192  }\n  193  \n  194: void GameManager::ballLost()\n  195  {\n  196  	EventManager::Instance()->handleGameEvents(0);\n  197  }\n  198  \n  199: void GameManager::ballsDepleted()\n  200  {\n  201  	gameLost();\n\n/home/will/Documents/git/Breakout/src/main.cpp:\n    4  #include <stdio.h>\n    5  #include <string>\n    6: #include \"GameManager.h\"\n    7  #include \"Globals.h\"\n    8  \n    .\n   13  Uint64 frameTime, lastFrameTime = 0;\n   14  \n   15: GameManager gameManager;\n   16  \n   17  bool init();\n   ..\n   64  	SDL_RenderPresent(gRenderer);\n   65  \n   66: 	while(!gameManager.shouldQuit()){\n   67: 		gameManager.update(frameTime - lastFrameTime);\n   68: 		gameManager.render(gRenderer);\n   69  		lastFrameTime = frameTime;\n   70  		frameTime = SDL_GetPerformanceCounter();\n\n/home/will/Documents/git/Breakout/include/GameManager.h:\n   16  #include \"Globals.h\"\n   17  \n   18: class GameManager : public IBlockDelegate, IBallDelegate, IBallsIndicatorDelegate\n   19  {\n   20  private:\n   ..\n   32  \n   33  public:\n   34: 	GameManager();\n   35: 	~GameManager();\n   36  \n   37  	void blockDisappearing();\n\n26 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 2719,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "include/IBallDelegate.h",
			"settings":
			{
				"buffer_size": 121,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/GameManager.h",
			"settings":
			{
				"buffer_size": 855,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GameManager.cpp",
			"settings":
			{
				"buffer_size": 3707,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 1479,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/ProgramManager.cpp",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef PROGRAM_MANAGER_H\n#define PROGRAM_MANAGER_H\n\nclass ProgramManager\n{\n	\n};\n\n#endif",
			"file": "include/ProgramManager.h",
			"file_size": 59,
			"file_write_time": 130975699770591695,
			"settings":
			{
				"buffer_size": 88,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Make.sublime-build",
					""
				],
				[
					"Packages/User/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Make.sublime-build",
					"All"
				],
				[
					"Packages/User/Make.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 370.0,
		"last_filter": "run",
		"selected_items":
		[
			[
				"run",
				"Build With: Make - Run"
			],
			[
				"",
				"Build With: Make - All"
			],
			[
				"make",
				"Build With: Make - All"
			],
			[
				"tags",
				"CTags: Rebuild Tags"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"clean",
				"Build With: Make - Clean"
			],
			[
				"all",
				"Build With: Make - All"
			],
			[
				"make all",
				"Build With: Make - All"
			],
			[
				"make clean",
				"Build With: Make - Clean"
			],
			[
				"make run",
				"Build With: Make - Run"
			],
			[
				"make distclean",
				"Build With: Make - Distclean"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"\\",
				"Origami: Zoom/Unzoom Current Pane (Toggle Zoom)"
			],
			[
				"git diff",
				"Git: Diff All Files"
			],
			[
				"git difftool",
				"Git: Diff Tool All"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"ctags",
				"CTags: Rebuild Tags"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"install ",
				"Package Control: Install Package"
			]
		],
		"width": 417.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"view.run_command(\"ansi\")",
			"sublime.run_command(\"color_scheme_emergency_reset\")",
			"class ColorSchemeEmergencyResetCommand(sublime_plugin.ApplicationCommand):",
			"import sublime_plugin",
			"import sublime",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/will/Documents/git/Breakout",
		"/home/will/Documents/git/Breakout/include",
		"/home/will/Documents/git/Breakout/src"
	],
	"file_history":
	[
		"/home/will/Documents/git/Breakout/src/main.cpp",
		"/home/will/Documents/git/Breakout/src/Paddle.cpp",
		"/home/will/Documents/git/Breakout/include/Paddle.h",
		"/home/will/Documents/git/Breakout/include/Block.h",
		"/home/will/Documents/git/Breakout/include/EventManager.h",
		"/home/will/Documents/git/Breakout/src/EventManager.cpp",
		"/home/will/.config/sublime-text-3/Packages/User/Default (Linux).sublime-mousemap",
		"/home/will/Documents/git/Breakout/src/Block.cpp",
		"/home/will/Documents/git/Breakout/src/Entity.cpp",
		"/home/will/Documents/git/Breakout/src/GameManager.cpp",
		"/home/will/Documents/git/Breakout/include/IEventHandler.h",
		"/home/will/Documents/git/Breakout/include/GameManager.h",
		"/home/will/Documents/git/Breakout/include/PhysicsEntity.h",
		"/home/will/Documents/git/Breakout/include/UIEntity.h",
		"/home/will/Documents/git/Breakout/include/Entity.h",
		"/home/will/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/will/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/will/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/usr/local/bin/colormake",
		"/home/will/Documents/git/Breakout/src/Ball.cpp",
		"/home/will/Documents/git/Breakout/Makefile",
		"/usr/local/bin/testcolormake.sh",
		"/home/will/Documents/git/Breakout/build/Ball.d",
		"/home/will/Documents/git/Breakout/include/Ball.h",
		"/home/will/Documents/git/Breakout/src/GameManager.h",
		"/home/will/Documents/git/Breakout/src/Ball.h",
		"/home/will/Documents/git/Breakout/src/Paddle.h",
		"/home/will/Documents/git/Breakout/src/Block.h",
		"/home/will/Documents/git/Breakout/src/IEventHandler.h",
		"/home/will/Documents/git/Breakout/src/UIEntity.h",
		"/home/will/Documents/git/Breakout/src/PhysicsEntity.h",
		"/home/will/Documents/git/Breakout/src/Entity.h",
		"/home/will/Documents/git/Breakout/src/IBlockDelegate.h",
		"/home/will/Documents/git/Breakout/src/UIEntity.c",
		"/home/will/Documents/git/Breakout/src/PhysicsEntity.c",
		"/home/will/Documents/git/Breakout/src/Globals.h",
		"/home/will/Documents/git/Breakout/.gitignore",
		"/home/will/Documents/git/Breakout/breakout",
		"/home/will/Documents/breakout/src/Paddle.cpp",
		"/home/will/Documents/breakout/src/Paddle.h",
		"/home/will/Documents/breakout/src/Entity.cpp",
		"/home/will/Documents/breakout/src/Ball.cpp",
		"/home/will/Documents/breakout/src/Entity.h",
		"/home/will/Documents/SDL Tutorial/09_the_viewport_SDL.cpp",
		"/home/will/Documents/breakout/src/IEventHandler.h",
		"/home/will/Documents/breakout/src/Block.cpp",
		"/home/will/Documents/breakout/src/Block.h",
		"/home/will/Documents/breakout/src/Ball.h",
		"/home/will/Documents/breakout/src/EventManager.cpp",
		"/home/will/Documents/breakout/src/EventManager.h",
		"/home/will/Documents/breakout/src/GameManager.cpp",
		"/home/will/Documents/breakout/src/GameManager.h",
		"/home/will/Documents/breakout/src/Globals.h",
		"/home/will/Documents/breakout/src/main.cpp",
		"/home/will/Documents/breakout/Makefile",
		"/home/will/Documents/breakout/breakout",
		"/home/will/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/LTexture.h",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/LTexture.cpp",
		"/home/will/Documents/SDL Tutorial/11_clip_rendering_and_sprite_sheets/11_clip_rendering_and_sprite_sheets_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/10_color_keying/Makefile",
		"/home/will/Documents/SDL Tutorial/Makefile",
		"/home/will/Documents/SDL Tutorial/10_color_keying/LTexture.cpp",
		"/home/will/Documents/SDL Tutorial/10_color_keying/LTexture.h",
		"/home/will/Documents/SDL Tutorial/10_color_keying/10_color_keying_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/08_geometry_rendering_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/07_texture_loading_and_rendering_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/06_extension_libraries_and_loading_other_image_formats_SDL.cpp",
		"/home/will/.config/sublime-text-3/Packages/CTags/CTags.sublime-settings",
		"/usr/include/SDL2/SDL_render.h",
		"/home/will/.config/sublime-text-3/Packages/User/PlainTasks.sublime-settings",
		"/home/will/.config/sublime-text-3/Packages/PlainTasks/messages/Tutorial.todo",
		"/home/will/Documents/SDL Tutorial/05_optimized_surface_loading_and_soft_stretching_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/04_key_presses_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/03_event_driven_programming_SDL.cpp",
		"/home/will/Documents/SDL Tutorial/02_image_on_screen_SDL.cpp",
		"/home/will/Downloads/01_hello_SDL/Makefile",
		"/home/will/Downloads/01_hello_SDL/01_hello_SDL.cpp",
		"/home/will/Downloads/01_hello_SDL/02_image_on_screen_SDL.cpp",
		"/home/will/.config/sublime-text-3/Packages/User/Make.sublime-build",
		"/home/will/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/will/.config/sublime-text-3/Packages/User/custom.sublime-build"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 100.0,
		"where_history":
		[
			"/home/will/Documents/git/Breakout/src,/home/will/Documents/git/Breakout/include",
			"\n<open folders>",
			"<current file>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"GameManager",
			"resetLevel",
			"if(event == 1)",
			"handleEvents",
			")/$(@:.",
			"Entity",
			"blockCount",
			"reset",
			"delete",
			";\n",
			"accel",
			"posX",
			"WAITING_ST",
			"iterator",
			"640",
			"){\n",
			"Player",
			"0x00",
			"GameManager",
			");\n",
			"quit",
			"EventHandler",
			",\n",
			"Hello",
			"theme",
			"font"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"handleKeyboardEvents",
			"Paddle",
			"EventManager"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 11,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/BallsIndicator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 697,
						"regions":
						{
						},
						"selection":
						[
							[
								327,
								327
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/BallsIndicator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1406,
						"regions":
						{
						},
						"selection":
						[
							[
								625,
								625
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/IBallsIndicatorDelegate.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 158,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/EventManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 973,
						"regions":
						{
						},
						"selection":
						[
							[
								968,
								968
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 128.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "include/EventManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 595,
						"regions":
						{
						},
						"selection":
						[
							[
								582,
								582
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/Ball.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 858,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/Ball.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5845,
						"regions":
						{
						},
						"selection":
						[
							[
								399,
								399
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2719,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										172,
										186
									],
									[
										361,
										372
									],
									[
										391,
										402
									],
									[
										404,
										415
									],
									[
										484,
										495
									],
									[
										498,
										509
									],
									[
										600,
										611
									],
									[
										683,
										694
									],
									[
										767,
										778
									],
									[
										873,
										884
									],
									[
										958,
										969
									],
									[
										1059,
										1070
									],
									[
										1137,
										1148
									],
									[
										1258,
										1269
									],
									[
										1414,
										1425
									],
									[
										1536,
										1547
									],
									[
										1629,
										1640
									],
									[
										1746,
										1757
									],
									[
										1921,
										1932
									],
									[
										2037,
										2048
									],
									[
										2049,
										2060
									],
									[
										2157,
										2168
									],
									[
										2193,
										2204
									],
									[
										2249,
										2260
									],
									[
										2473,
										2484
									],
									[
										2611,
										2622
									],
									[
										2635,
										2646
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								251,
								251
							]
						],
						"settings":
						{
							"default_dir": "/home/will/Documents/git/Breakout",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1463.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "include/IBallDelegate.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 121,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "include/GameManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 855,
						"regions":
						{
						},
						"selection":
						[
							[
								724,
								724
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 257.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/GameManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3707,
						"regions":
						{
						},
						"selection":
						[
							[
								1470,
								1470
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1479,
						"regions":
						{
						},
						"selection":
						[
							[
								625,
								625
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/ProgramManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "include/ProgramManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 437.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 466.0
	},
	"pinned_build_system": "Packages/User/Make.sublime-build",
	"project": "breakout.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"eve",
				"src/EventManager.cpp"
			],
			[
				"event",
				"src/EventManager.cpp"
			],
			[
				"game",
				"src/GameManager.cpp"
			],
			[
				"",
				"src/Ball.h"
			],
			[
				"p",
				"src/Paddle.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 480.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
